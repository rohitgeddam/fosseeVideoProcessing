[{"/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/App.tsx":"1","/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/index.ts":"2","/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/Upload/UploadCard.tsx":"3","/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/Upload/index.ts":"4","/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/Upload/components/UploadButton.tsx":"5","/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/lib/api/axios.ts":"6"},{"size":397,"mtime":1609405063345,"results":"7","hashOfConfig":"8"},{"size":24,"mtime":1609394787485,"results":"9","hashOfConfig":"8"},{"size":2237,"mtime":1609405032497,"results":"10","hashOfConfig":"8"},{"size":72,"mtime":1609395786313,"results":"11","hashOfConfig":"8"},{"size":904,"mtime":1609403790197,"results":"12","hashOfConfig":"8"},{"size":106,"mtime":1609404096566,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mqy3xe",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/App.tsx",["27"],"/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/index.ts",[],"/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/Upload/UploadCard.tsx",["28","29"],"import React, { SyntheticEvent, useState } from 'react';\n\n\nimport { api } from '../../lib'\n\nimport styled from 'styled-components';\n\nimport { Divider } from 'antd';\n\nimport { UploadButton } from '.'\n\nconst Card = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    justify-content: space-between;\n    align-items: center;\n\n    max-height: 600px;\n    min-height: 400px;\n    min-width: 400px;\n    max-width: 600px;\n    border: 1px solid black;\n    align-self: center;\n    background-color: #FFFFFF;\n    box-shadow: 5px 5px 10px 15px rgba(0,0,0,0.2);\n\n`\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items:center;\n    min-width: 100%;\n    min-height: 100px;\n    max-height: 200px;\n    justify-content: space-between;\n    margin: 20px 0;\n\n`\n\nconst ProcessBtn = styled.button`\n    width: 100%;\n    padding: 20px;\n    background-color: #292F36;\n    border: none;\n    cursor: pointer;\n    color: #ffffff;\n    font-size: 20px;\n    letter-spacing: 4px;\n`\n\n\n  \n\nexport const UploadCard = () => {\n\n    const [videoFile, setVideoFile] = useState('');\n    const [srtFile, setSrtFile] = useState('');\n\n    const handleSubmit = async (e: SyntheticEvent) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"video\", videoFile);\n        formData.append(\"srt\", srtFile);\n\n        try{ \n            const response = await api.post(\n                'upload/',\n                formData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }\n\n            )\n            const operationId = response.data.operationId;\n            const operationUrl = response.data.operation_url;\n            \n        } catch (err) {\n            console.log(err)\n        }\n        \n    }\n    \n    return (\n        <Card>\n            <ButtonContainer>\n                <UploadButton label={\"Choose video file\"} onChange={setVideoFile}/>\n                <Divider/>\n                <UploadButton label={\"Choose srt file\"} onChange={setSrtFile}/>\n            </ButtonContainer>\n            <ProcessBtn onClick={handleSubmit}>Process</ProcessBtn>\n        </Card>\n        \n    )\n}\n\n","/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/Upload/index.ts",[],"/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/sections/Upload/components/UploadButton.tsx",["30","31","32","33","34"],"/Users/rohitgeddam/Development/projects/fosseeVideoProcessing/ui/src/lib/api/axios.ts",[],{"ruleId":"35","severity":1,"message":"36","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":16},{"ruleId":"35","severity":1,"message":"39","line":78,"column":19,"nodeType":"37","messageId":"38","endLine":78,"endColumn":30},{"ruleId":"35","severity":1,"message":"40","line":79,"column":19,"nodeType":"37","messageId":"38","endLine":79,"endColumn":31},{"ruleId":"35","severity":1,"message":"41","line":1,"column":16,"nodeType":"37","messageId":"38","endLine":1,"endColumn":30},{"ruleId":"35","severity":1,"message":"36","line":4,"column":10,"nodeType":"37","messageId":"38","endLine":4,"endColumn":16},{"ruleId":"35","severity":1,"message":"42","line":4,"column":18,"nodeType":"37","messageId":"38","endLine":4,"endColumn":25},{"ruleId":"35","severity":1,"message":"43","line":4,"column":27,"nodeType":"37","messageId":"38","endLine":4,"endColumn":33},{"ruleId":"35","severity":1,"message":"44","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":24},"@typescript-eslint/no-unused-vars","'Upload' is defined but never used.","Identifier","unusedVar","'operationId' is assigned a value but never used.","'operationUrl' is assigned a value but never used.","'SyntheticEvent' is defined but never used.","'message' is defined but never used.","'Button' is defined but never used.","'UploadOutlined' is defined but never used."]